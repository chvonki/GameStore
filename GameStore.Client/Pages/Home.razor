@page "/"
@using GameStore.Client.Models
@inject NavigationManager NavigationManager
@inject GameClient client;

<PageTitle>Game Catalog</PageTitle>

<h1>Каталог игр</h1>

<div class="row mb-4">
    <div class="col-sm-6">
        <button type="button" class="btn btn-primary" @onclick="CreateGame">Добавить игру</button>
    </div>
    <div class="col">
        <input type="text" class="form-control" placeholder="Поиск по названию или жанру" @bind="searchString"
            @bind:event="oninput" @onkeyup="FetchGameAsync" />
    </div>
</div>

@if (games is null)
{
    <p><em>Загрузка...</em></p>
}
else
{
    <DeleteGame Game="@currentGame" OnClose="@OnDeleteModalCloseAsync">

    </DeleteGame>

    <table class="table table-hover table-bordered table-light">
        <thead class="table-dark">
            <th>№</th>
            <th>Название</th>
            <th>Жанр</th>
            <th>Цена $</th>
            <th>Дата выхода</th>
            <th></th>
        </thead>
        <tbody>
            @foreach (var game in games)
            {
                <tr>
                    <td>@game.Id</td>
                    <td>@game.Name</td>
                    <td>@game.Genre</td>
                    <td>@game.Price</td>
                    <td>@game.ReleaseDate</td>
                    <td>
                        <button type="button" class="btn btn-outline-primary" @onclick="(() => EditGame(game.Id))">
                            <i class="bi bi-pencil-fill"></i>
                        </button>
                        <button type="button" class="btn btn-outline-danger" data-bs-toggle="modal"
                            data-bs-target="#deleteModal" @onclick="(() => currentGame = game)">
                            <i class="bi bi-trash-fill"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code
{
    private Game[]? games;
    private Game? currentGame;
    private string? searchString;
    protected override async Task OnInitializedAsync()
    {
        await FetchGameAsync();
    }

    private void CreateGame()
    {
        NavigationManager.NavigateTo("/game");
    }

    private void EditGame(int id)
    {
        NavigationManager.NavigateTo($"/game/{id}");
    }

    private async Task OnDeleteModalCloseAsync(bool accepted)
    {
        if (accepted)
        {
            await client.DeleteGameAsync(currentGame!.Id);
            await FetchGameAsync();
        }
    }

    private async Task FetchGameAsync()
    {
        games = await client.GetGamesAsync(searchString);
    }

}